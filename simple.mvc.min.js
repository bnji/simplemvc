var Common={},MVC={Controller:function(c){return c},ModelView:function(c,a,b){console.log("ModelView Created...");if(null===b||void 0===b)b={};void 0===b.viewId&&$.extend(b,{viewId:c});void 0===b.reflectModelChangeInView&&$.extend(b,{reflectModelChangeInView:!0});b.reflectModelChangeInView&&$.each(a,function(b){MVC.AddGetSet(a,b,function(b){MVC.SetDomVal(c,a);$(":input[name="+b+"]").not(".excludeFromModel").trigger("change")})});var d=b.autoSaveInterval;0<d&&setInterval(function(){MVC.Save(a)},d);
MVC.SetDomVal(c,a);MVC.SetModelFromDomValues(c,a);$(c+" :input").not(".excludeFromModel").focus(function(a){MVC.EvtRun(b,a)}).blur(function(a){MVC.EvtRun(b,a)}).change(function(d){MVC.SetModelFromDomValues(c,a);MVC.EvtRun(b,d)}).select(function(a){MVC.EvtRun(b,a)}).submit(function(a){MVC.EvtRun(b,a)}).keyup(function(a){MVC.EvtRun(b,a)}).keypress(function(a){MVC.EvtRun(b,a)}).keydown(function(a){MVC.EvtRun(b,a)});b={settings:b};$.extend(a,b);return a},EvtRun:function(c,a){var b=a.type;if(void 0!==
c.settings[b]&&null!==c.settings[b])c.settings[b](a,a.target.name,a.target.value)},CtrRun:function(c,a,b){var d=a.settings.controller[c];void 0!==d&&null!==d?d(a,b):alert("Missing "+c+"() method!")},Save:function(c,a){MVC.CtrRun("Save",c,a)},Update:function(c,a){MVC.CtrRun("Update",c,a)},Delete:function(c,a){MVC.CtrRun("Delete",c,a)},Set:function(c,a,b){$(c).trigger("set"+a,[b]);console.log("Set)")},Get:function(c,a){console.log("Get()");var b={val:void 0};$(c).triggerHandler("get"+a,[b]);return b.val},
AddGetSet:function(c,a,b){console.log("AddGetSet");$(c).bind("get"+a,function(b,e){e.val=c[a]}).bind("set"+a,function(d,e){var f=c[a];f!==e&&(c[a]=e,b(a,f,e))})},SetDomVal:function(c,a){console.log("SetDomVal()");$(c).getSetHtml(a)},GetDomVal:function(c){console.log("GetDomVal()");return $(c).getSetHtml()},SetModelFromDomValues:function(c,a){console.log("SetModelFromDomValues()");var b=MVC.GetDomVal(c);$.each(b,function(b,e){a[b]!==e&&(a[b]=e,MVC.SetDataboundDomVal(c,b,e))});return b},SetDataboundDomVal:function(c,
a,b){console.log("SetDataboundDomVal()");$("div[datasrc|="+c+"][name|="+a+"],p[datasrc|="+c+"][name|="+a+"],span[datasrc|="+c+"][name|="+a+"]").text(b);$("input[datasrc|="+c+"][name|="+a+"]").val(b)}};
(function(c){c.fn.extend({getSetHtml:function(a){return void 0!==a?this.setValues(a):this.getValues()},getInputElements:function(a){return a.find("input,button,select,textarea").filter(":not(.excludeFromModel)")},getElementKey:function(a){var b=c(a).attr("datafld");void 0===b&&(b=c(a).attr("id"));return b},getDivElements:function(a){return a.find("p,span,div").filter(":not(.excludeFromModel)")},setValues:function(a){console.log("setValues called!");$this=this;$this.getDivElements(this).each(function(){var b=
$this.getElementKey(this);void 0!==b&&(b=a[b],console.log(b),c(this).text(b))});$this.getInputElements(this).each(function(){var b=a[c(this).attr("name")],d;void 0!==b&&(d=c(this),d.is(":radio")?d.val()===b&&d.attr("checked",!0):(d.is(":checkbox")&&(b=c.isArray(b)?b:[b],-1<c.inArray(d.val(),b)&&d.attr("checked",!0)),d.val(b)))})},getValues:function(){var a={},b={};$this=this;$this.getInputElements(this).each(function(){var a=c(this),e=a.attr("type"),f=a.attr("name"),g=a.val();"submit"!==e&&f&&(a.hasClass("isNumber")&&
(g=parseInt(g)),a.is(":checkbox")?(g=!1,a.attr("checked")&&(g=!0),b[f]=g):a.is(":radio")?a.attr("checked")&&(b[f]=g):b[f]=g)});$this.getDivElements(this).each(function(){var b=c(this).text();if(void 0!==b){var e=$this.getElementKey(this);void 0!==e&&(a[e]=b)}});return a=c.extend(a,b)}})})(jQuery);